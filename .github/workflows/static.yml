# .github/workflows/static.yml

name: Deploy static content to Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydatabase
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Wait for PostgreSQL to be ready
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Set up Environment Variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/mydatabase" >> $GITHUB_ENV

      - name: Install Dependencies
        run: npm ci

      - name: Run Prisma Migrations
        run: npx prisma migrate deploy

      - name: Build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Archive Out Directory
        run: tar -czf out.tar.gz out

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out.tar.gz

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
